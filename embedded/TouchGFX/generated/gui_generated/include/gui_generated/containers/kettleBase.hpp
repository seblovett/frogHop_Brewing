/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef KETTLEBASE_HPP
#define KETTLEBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/ToggleButton.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/containers/clock/DigitalClock.hpp>
#include <touchgfx/widgets/Button.hpp>

class kettleBase : public touchgfx::Container
{
public:
    kettleBase();
    virtual ~kettleBase() {}
    virtual void initialize();

    /*
     * Custom Actions
     */
    virtual void actionHeaterChange(bool value);
    virtual void actionPumpChange(bool value);
    virtual void actionSetTempChange(uint8_t value);

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::ToggleButton pumpToggle;
    touchgfx::Image image1;
    touchgfx::TextAreaWithOneWildcard kettleName;
    touchgfx::ToggleButton heaterToggle;
    touchgfx::Slider sliderTemperature;
    touchgfx::TextAreaWithOneWildcard textSetTemp;
    touchgfx::TextArea textAreaSetLabel;
    touchgfx::TextAreaWithOneWildcard textCurrentTemp;
    touchgfx::TextArea textAreaTempLabel;
    touchgfx::DigitalClock timer;
    touchgfx::TextArea textAreaTimerLabel;
    touchgfx::Button button1;
    touchgfx::Button button2;

    /*
     * Wildcard Buffers
     */
    static const uint16_t KETTLENAME_SIZE = 10;
    touchgfx::Unicode::UnicodeChar kettleNameBuffer[KETTLENAME_SIZE];
    static const uint16_t TEXTSETTEMP_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textSetTempBuffer[TEXTSETTEMP_SIZE];
    static const uint16_t TEXTCURRENTTEMP_SIZE = 4;
    touchgfx::Unicode::UnicodeChar textCurrentTempBuffer[TEXTCURRENTTEMP_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<kettleBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<kettleBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

};

#endif // KETTLEBASE_HPP
