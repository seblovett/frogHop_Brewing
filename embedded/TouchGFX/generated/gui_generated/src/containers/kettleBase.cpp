/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/kettleBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

kettleBase::kettleBase() :
    buttonCallback(this, &kettleBase::buttonCallbackHandler)
{
    setWidth(480);
    setHeight(272);
    pumpToggle.setXY(115, 176);
    pumpToggle.setBitmaps(touchgfx::Bitmap(BITMAP_WATER_PUMP_OFF_ID), touchgfx::Bitmap(BITMAP_WATER_PUMP_ON_ID));
    pumpToggle.setAction(buttonCallback);

    image1.setXY(192, 73);
    image1.setBitmap(touchgfx::Bitmap(BITMAP_PAN_ID));

    kettleName.setPosition(182, 0, 117, 49);
    kettleName.setColor(touchgfx::Color::getColorFrom24BitRGB(196, 196, 196));
    kettleName.setLinespacing(0);
    Unicode::snprintf(kettleNameBuffer, KETTLENAME_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID13).getText());
    kettleName.setWildcard(kettleNameBuffer);
    kettleName.setTypedText(touchgfx::TypedText(T_SINGLEUSEID1));

    heaterToggle.setXY(304, 146);
    heaterToggle.setBitmaps(touchgfx::Bitmap(BITMAP_HEATER_OFF_ID), touchgfx::Bitmap(BITMAP_HEATER_ON_ID));
    heaterToggle.setAction(buttonCallback);

    textSetTemp.setXY(101, 111);
    textSetTemp.setColor(touchgfx::Color::getColorFrom24BitRGB(196, 196, 196));
    textSetTemp.setLinespacing(0);
    Unicode::snprintf(textSetTempBuffer, TEXTSETTEMP_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID8).getText());
    textSetTemp.setWildcard(textSetTempBuffer);
    textSetTemp.resizeToCurrentText();
    textSetTemp.setTypedText(touchgfx::TypedText(T_SINGLEUSEID7));

    textAreaSetLabel.setXY(36, 111);
    textAreaSetLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(196, 196, 196));
    textAreaSetLabel.setLinespacing(0);
    textAreaSetLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID9));

    textCurrentTemp.setXY(101, 83);
    textCurrentTemp.setColor(touchgfx::Color::getColorFrom24BitRGB(196, 196, 196));
    textCurrentTemp.setLinespacing(0);
    Unicode::snprintf(textCurrentTempBuffer, TEXTCURRENTTEMP_SIZE, "%s", touchgfx::TypedText(T_SINGLEUSEID11).getText());
    textCurrentTemp.setWildcard(textCurrentTempBuffer);
    textCurrentTemp.resizeToCurrentText();
    textCurrentTemp.setTypedText(touchgfx::TypedText(T_SINGLEUSEID10));

    textAreaTempLabel.setXY(15, 83);
    textAreaTempLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(196, 196, 196));
    textAreaTempLabel.setLinespacing(0);
    textAreaTempLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID12));

    timer.setPosition(94, 140, 67, 25);
    timer.setColor(touchgfx::Color::getColorFrom24BitRGB(196, 196, 196));
    timer.setTypedText(touchgfx::TypedText(T_SINGLEUSEID14));
    timer.displayLeadingZeroForHourIndicator(true);
    timer.setDisplayMode(touchgfx::DigitalClock::DISPLAY_24_HOUR_NO_SECONDS);
    timer.setTime24Hour(0, 0, 0);

    textAreaTimerLabel.setXY(13, 140);
    textAreaTimerLabel.setColor(touchgfx::Color::getColorFrom24BitRGB(196, 196, 196));
    textAreaTimerLabel.setLinespacing(0);
    textAreaTimerLabel.setTypedText(touchgfx::TypedText(T_SINGLEUSEID15));

    imageHeatlines.setXY(313, 106);
    imageHeatlines.setBitmap(touchgfx::Bitmap(BITMAP_HEAT_LINES_ID));

    buttonup_10.setXY(442, 73);
    buttonup_10.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonup_10.setAction(buttonCallback);

    buttonup_1.setXY(442, 143);
    buttonup_1.setBitmaps(touchgfx::Bitmap(BITMAP_UP_ARROW_ID), touchgfx::Bitmap(BITMAP_UP_ARROW_PRESSED_ID));
    buttonup_1.setAction(buttonCallback);

    buttondown_1.setXY(442, 175);
    buttondown_1.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttondown_1.setAction(buttonCallback);

    buttondown_10.setXY(442, 233);
    buttondown_10.setBitmaps(touchgfx::Bitmap(BITMAP_DOWN_ARROW_ID), touchgfx::Bitmap(BITMAP_DOWN_ARROW_PRESSED_ID));
    buttondown_10.setAction(buttonCallback);

    add(pumpToggle);
    add(image1);
    add(kettleName);
    add(heaterToggle);
    add(textSetTemp);
    add(textAreaSetLabel);
    add(textCurrentTemp);
    add(textAreaTempLabel);
    add(timer);
    add(textAreaTimerLabel);
    add(imageHeatlines);
    add(buttonup_10);
    add(buttonup_1);
    add(buttondown_1);
    add(buttondown_10);
}

void kettleBase::initialize()
{

}

void kettleBase::actionPumpChange(bool value)
{

}

void kettleBase::actionSetTempChange(int8_t value)
{

}

void kettleBase::actionHeaterChange(bool value)
{

}

void kettleBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &pumpToggle)
    {
        //InteractionPump
        //When pumpToggle clicked call actionPumpChange on kettle
        //Call actionPumpChange
        actionPumpChange(pumpToggle.getState());
    }
    else if (&src == &heaterToggle)
    {
        //InteractionHeater
        //When heaterToggle clicked call actionHeaterChange on kettle
        //Call actionHeaterChange
        actionHeaterChange(heaterToggle.getState());
    }
    else if (&src == &buttonup_10)
    {
        //Interaction_up_10
        //When buttonup_10 clicked call actionSetTempChange on kettle
        //Call actionSetTempChange
        actionSetTempChange(10);
    }
    else if (&src == &buttonup_1)
    {
        //Interaction_up_1
        //When buttonup_1 clicked call actionSetTempChange on kettle
        //Call actionSetTempChange
        actionSetTempChange(1);
    }
    else if (&src == &buttondown_1)
    {
        //Interaction_down_1
        //When buttondown_1 clicked call actionSetTempChange on kettle
        //Call actionSetTempChange
        actionSetTempChange(-1);
    }
    else if (&src == &buttondown_10)
    {
        //Interaction_down_10
        //When buttondown_10 clicked call actionSetTempChange on kettle
        //Call actionSetTempChange
        actionSetTempChange(-10);
    }
}

